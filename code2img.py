from pygments import highlight
from pygments.lexers import get_lexer_by_name
from pygments.formatters import HtmlFormatter
import imgkit
from PIL import Image
import re
import sys
import os
import codecs

os.chdir(sys.path[0])

FONT_SIZE = 28
LINE_HEIGHT = 1.4
MARGIN = FONT_SIZE * 4

filePath = ' '.join(sys.argv[1:])
lexer = get_lexer_by_name('python', stripall=True)
formatter = HtmlFormatter(linenos=False, cssclass='source', style='monokai')
outFormat = '''
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Code Generated by code2img</title>
<style>
body {{background: #272822;}}
* {{font-family: Menlo; font-size: {fontsize}px; line-height: {lineheight}px;}}
#container {{margin: {margin}px; display: inline-block;}}
{style}
/* Custom Styles */
.source .bp {{ color: #ae81ff;}}
.source .k {{ color: #f92672;}}
.source .nb {{ color: #66d9ef; font-style: italic}}
</style>
</head>
<body>
<div id="container">
{body}
</div>
</body>
</html>
'''.strip()
outOptions = {
    'quiet': '',
    'format': 'jpg',
    'encoding': 'UTF-8'
}

with codecs.open(filePath, 'r', 'utf-8') as file:
    body = highlight(file.read(), lexer, formatter)
    style = formatter.get_style_defs()
    with codecs.open('result.html', 'w', 'utf-8') as outFile:
        outFile.write(outFormat.format(body=body, style=style, fontsize=FONT_SIZE, lineheight=round(FONT_SIZE*LINE_HEIGHT), margin=MARGIN))
    try:
        imgkit.from_file(os.path.join(sys.path[0], 'result.html'), os.path.join(sys.path[0], 'result.jpg'), options=outOptions)
    except Exception as e:
        pass
